{"version":3,"sources":["actions/index.js","reducers/index.js","store.js","components/QuestionList.js","components/AddQuestion.js","components/Sidebar.js","components/EditQuestion.js","components/Head.js","App.js","index.js"],"names":["FETCH_POSTS","ADD_QUESTION","UPDATE_QUESTION","UPDATED_QUESTION","initialState","posts","search","post","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","map","e","id","QuestionList","handleUpdate","title","body","answer","dispatch","_this2","this","listPosts","props","filter","indexOf","toLowerCase","react_default","a","createElement","Grid","Column","width","Card","fluid","key","Content","Header","color","Divider","horizontal","Description","hidden","Modal","trigger","Button","icon","content","basic","size","Actions","inverted","Icon","name","Link","to","onClick","bind","React","Component","connect","AddQuestion","handleChange","_this","setState","defineProperty","target","value","handleClick","_this$state","preventDefault","alert","axios","method","url","data","uuid","then","res","history","push","Form","Field","control","Input","label","placeholder","onChange","TextArea","Sidebar","Segment","className","textAlign","List","Item","EditQuestion","_callee","upQuestion","regenerator_default","wrap","_context","prev","next","put","sent","stop","get","_this$state2","Head","as","Image","circular","src","App","es","HashRouter","Fragment","Container","components_Head","columns","Row","components_Sidebar","Switch","Route","exact","path","component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.30f8ed19.chunk.js","sourcesContent":["export const FETCH_POSTS = \"FETCH_POSTS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const UPDATE_QUESTION = \"UPDATE_QUESTION\";\nexport const UPDATED_QUESTION = \"UPDATED_QUESTION\";\n\nexport function fetchPosts(payload) {\n  return { type: FETCH_POSTS, payload };\n}\n\nexport function addQuestion(payload) {\n  return { type: ADD_QUESTION, payload };\n}\n\nexport function updQuestion(payload) {\n  return { type: UPDATE_QUESTION, payload };\n}\n\nexport function upedQuestion(payload) {\n  return { type: UPDATED_QUESTION, payload };\n}\n","import {\n  FETCH_POSTS,\n  ADD_QUESTION,\n  UPDATE_QUESTION,\n  UPDATED_QUESTION\n\n} from \"../actions/index\";\n\nconst initialState = {\n  posts: [],\n  search: \"\",\n  post: \"\"\n};\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return { ...state, posts: action.payload };\n    case ADD_QUESTION:\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts]\n      };\n    case UPDATE_QUESTION:\n      return {\n        ...state,\n        post: action.payload\n      };\n    case UPDATED_QUESTION:\n      return {\n        ...state,\n        posts: state.posts.map(e =>\n          e.id === action.payload.id ? (e = action.payload) : e\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport { reducer } from \"./reducers/index\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport store from \"../store\";\nimport { UPDATE_QUESTION } from \"../actions/index\";\n\nimport {Grid, Card, Header, Divider, Button, Modal, Icon} from \"semantic-ui-react\";\n\n\nclass QuestionList extends React.Component {\n  state = {};\n\n  handleUpdate = (title, body, answer, id) => {\n    store.dispatch({\n      type: UPDATE_QUESTION,\n      payload: { title: title, body: body, answer:answer, id: id }\n    });\n  };\n\n  render() {\n    let listPosts = this.props.posts.filter(post => {\n      return post.title.indexOf(this.props.search.toLowerCase()) !== -1;\n    });\n    return (\n      <Grid.Column width={12}>\n        {listPosts.map(e => (\n          <Card fluid key={e.id}>\n            <Card.Content>\n              <Header color=\"red\">{e.title}</Header>\n              <Divider horizontal>Question</Divider>\n              <Card.Description>{e.body}</Card.Description>\n              <Divider hidden/>\n              <Divider horizontal>Answer</Divider>\n              <Card.Description>{e.answer}</Card.Description>\n              <Divider hidden/>\n              <Modal trigger={<Button color='red' icon='trash' content='Delete'/>} basic size='small'>\n                <Header icon='archive' content='Bạn có muốn xoá câu hỏi này không !'/>\n                <Modal.Actions>\n                  <Button basic color='red'\n                          inverted\n                  >\n                    <Icon name='remove'/> No\n                  </Button>\n                  <Button color='green'\n                          inverted\n                  >\n                    <Icon name='checkmark'/> Yes\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n              <Link to=\"/edit\">\n                <Button\n                  color=\"blue\"\n                  inverted\n                  onClick={this.handleUpdate.bind(this, e.title, e.body, e.answer, e.id)}\n                >\n                  Edit\n                </Button>\n              </Link>\n            </Card.Content>\n          </Card>\n        ))}\n      </Grid.Column>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    search: state.search,\n    post: state.post\n  };\n}\n\n\nexport default connect(mapStateToProps)(QuestionList);\n","import React from \"react\";\nimport axios from \"axios\";\nimport uuid from \"uuid\";\nimport store from \"../store\";\nimport { Link } from \"react-router-dom\";\nimport { ADD_QUESTION } from \"../actions/index\";\n\nimport { Grid, Form, Input, Button, TextArea } from \"semantic-ui-react\";\n\nclass AddQuestion extends React.Component {\n  state = {\n    title: \"\",\n    body: \"\",\n    answer:\"\"\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleClick = e => {\n    const { title, body, answer } = this.state;\n    e.preventDefault();\n\n    if (title === \"\" || body === \"\" || answer === \"\") {\n      alert(\"Vui long điền thông tin !\");\n    } else {\n      axios({\n        method: \"POST\",\n        url: \"https://huebj.sse.codesandbox.io/posts\",\n        data: {\n          title: title,\n          body: body,\n          answer: answer,\n          id: uuid()\n        }\n      }).then(res => {\n        store.dispatch({ type: ADD_QUESTION, payload: res.data });\n      });\n      this.props.history.push(\"/\");\n    }\n  };\n\n  render() {\n    return (\n      <Grid.Column width={12}>\n        <Form>\n          <Form.Field\n            name=\"title\"\n            control={Input}\n            label=\"Title\"\n            placeholder=\"Title...\"\n            onChange={this.handleChange}\n          />\n\n          <Form.Field\n            name=\"body\"\n            control={TextArea}\n            label=\"Question\"\n            placeholder=\"Question...\"\n            onChange={this.handleChange}\n          />\n\n          <Form.Field\n            name=\"answer\"\n            control={TextArea}\n            label=\"Answer\"\n            placeholder=\"Answer...\"\n            onChange={this.handleChange}\n          />\n          <Link to=\"/\">\n            <Button\n              color=\"blue\"\n              inverted\n            >\n              Back\n            </Button>\n          </Link>\n          <Button\n            color=\"red\"\n            inverted\n            onClick={this.handleClick}\n          >\n            Submit !\n          </Button>\n        </Form>\n      </Grid.Column>\n    );\n  }\n}\n\nexport default AddQuestion;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nimport {Grid, Segment, List} from \"semantic-ui-react\";\n\nclass Sidebar extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <Grid.Column width={4}>\n        <Segment className=\"sideBar\" textAlign=\"left\">\n          <List>\n            <List.Item>\n              <List.Content>\n                <Link to=\"/\">Question</Link>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Content>\n                <Link to=\"/add\">Add Question</Link>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n\n      </Grid.Column>\n\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport store from \"../store\";\nimport { UPDATED_QUESTION } from \"../actions/index\";\n\nimport { Grid, Form, Input, Button, TextArea } from \"semantic-ui-react\";\n\nclass EditQuestion extends React.Component {\n  state = {\n    title: \"\",\n    body: \"\",\n    answer: \"\"\n  };\n\n  async componentDidMount() {\n    axios\n      .get(`https://huebj.sse.codesandbox.io/posts/${this.props.post.id}`)\n      .then(res => {\n        const post = res.data;\n\n        this.setState({\n          title: post.title,\n          body: post.body,\n          answer: post.answer\n        });\n      });\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleClick = async e => {\n    e.preventDefault();\n    const { title, body, answer } = this.state;\n\n    const upQuestion = {\n      title,\n      body,\n      answer\n    };\n    const res = await axios.put(\n      `https://huebj.sse.codesandbox.io/posts/${this.props.post.id}`,\n      upQuestion\n    );\n\n    store.dispatch({ type: UPDATED_QUESTION, payload: res.data });\n\n    this.setState({\n      title: \"\",\n      body: \"\",\n      answer:\"\"\n    });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { title, body, answer } = this.state;\n    return (\n      <Grid.Column width={12}>\n        <Form>\n          <Form.Field\n            name=\"title\"\n            value={title}\n            control={Input}\n            label=\"Update Title\"\n            placeholder=\"Update Title...\"\n            onChange={this.handleChange}\n          />\n\n          <Form.Field\n            name=\"body\"\n            value={body}\n            control={TextArea}\n            label=\"Update Question\"\n            placeholder=\"Update Question...\"\n            onChange={this.handleChange}\n          />\n\n          <Form.Field\n            name=\"answer\"\n            value={answer}\n            control={TextArea}\n            label=\"Update Answer\"\n            placeholder=\"Update Answer...\"\n            onChange={this.handleChange}\n          />\n          <Button color=\"blue\"\n                  inverted\n                  onClick={this.handleClick}\n          >\n            Update Question!\n          </Button>\n        </Form>\n      </Grid.Column>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n}\n\nexport default connect(mapStateToProps)(EditQuestion);\n","import React from 'react'\nimport { Header, Image } from 'semantic-ui-react'\n\nconst Head = () => (\n  <Header as='h2'>\n    <Image circular src='https://react.semantic-ui.com/images/avatar/large/patrick.png' /> Hưng Nguyễn\n  </Header>\n)\n\nexport default Head;\n","import React from 'react';\nimport {Provider} from \"react-redux\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FETCH_POSTS } from \"./actions/index\";\n//store\nimport store from \"./store\";\n//layout\nimport {Grid, Container} from \"semantic-ui-react\";\n//components\nimport QuestionList from \"./components/QuestionList\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport Sidebar from \"./components/Sidebar\";\nimport EditQuestion from \"./components/EditQuestion\";\nimport Head from \"./components/Head\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    axios.get(\"https://huebj.sse.codesandbox.io/posts\").then(res => {\n      store.dispatch({ type: FETCH_POSTS, payload: res.data });\n    });\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <React.Fragment>\n            <Container>\n              <Head />\n              <Grid columns={2}>\n                <Grid.Row>\n                  <Sidebar />\n                  <Switch>\n                    <Route exact path=\"/\" component={QuestionList} />\n                    <Route exact path=\"/add\" component={AddQuestion} />\n                    <Route exact path=\"/edit\" component={EditQuestion} />\n                  </Switch>\n                </Grid.Row>\n              </Grid>\n            </Container>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}